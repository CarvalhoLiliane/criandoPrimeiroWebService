
package calculadora;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.4.4
 * 2022-12-23T22:45:18.989-03:00
 * Generated source version: 3.4.4
 *
 */
public final class CalculadoraExemplo_CalculadoraExemploPort_Client {

    private static final QName SERVICE_NAME = new QName("http://calculadora/", "CalculadoraExemploService");

    private CalculadoraExemplo_CalculadoraExemploPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = CalculadoraExemploService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) {
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }

        CalculadoraExemploService ss = new CalculadoraExemploService(wsdlURL, SERVICE_NAME);
        CalculadoraExemplo port = ss.getCalculadoraExemploPort();

        {
        System.out.println("Invoking subtrai...");
        java.lang.Double _subtrai_arg0 = Double.valueOf(0.6223592704614066);
        java.lang.Double _subtrai_arg1 = Double.valueOf(0.5584971451940023);
        java.lang.Double _subtrai__return = port.subtrai(_subtrai_arg0, _subtrai_arg1);
        System.out.println("subtrai.result=" + _subtrai__return);


        }
        {
        System.out.println("Invoking divide...");
        java.lang.Double _divide_arg0 = Double.valueOf(0.09161612481705772);
        java.lang.Double _divide_arg1 = Double.valueOf(0.5144780440737996);
        java.lang.Double _divide__return = port.divide(_divide_arg0, _divide_arg1);
        System.out.println("divide.result=" + _divide__return);


        }
        {
        System.out.println("Invoking multiplica...");
        java.lang.Double _multiplica_arg0 = Double.valueOf(0.23098147908947442);
        java.lang.Double _multiplica_arg1 = Double.valueOf(0.8256439856778561);
        java.lang.Double _multiplica__return = port.multiplica(_multiplica_arg0, _multiplica_arg1);
        System.out.println("multiplica.result=" + _multiplica__return);


        }
        {
        System.out.println("Invoking soma...");
        java.lang.Double _soma_arg0 = Double.valueOf(0.22144355810257488);
        java.lang.Double _soma_arg1 = Double.valueOf(0.6328927034037957);
        java.lang.Double _soma__return = port.soma(_soma_arg0, _soma_arg1);
        System.out.println("soma.result=" + _soma__return);


        }

        System.exit(0);
    }

}
